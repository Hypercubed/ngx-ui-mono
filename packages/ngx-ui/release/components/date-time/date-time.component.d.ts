import { EventEmitter, OnInit, TemplateRef, OnDestroy, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as moment from 'moment';
import { DialogService } from '../dialog';
import { DateTimeType } from './date-time.type';
export declare class DateTimeComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private dialogService;
    id: string;
    name: string;
    disabled: boolean;
    tabindex: number;
    autofocus: boolean;
    label: string;
    hint: string;
    placeholder: string;
    minDate: Date;
    maxDate: Date;
    format: string;
    inputType: DateTimeType;
    change: EventEmitter<any>;
    value: Date;
    calendarTpl: TemplateRef<ElementRef>;
    _value: Date;
    errorMsg: string;
    dialog: any;
    dialogModel: moment.Moment;
    hour: number;
    minute: number;
    amPmVal: string;
    constructor(dialogService: DialogService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    writeValue(val: any): void;
    open(): void;
    apply(): void;
    dateSelected(date: any): void;
    minuteChanged(newVal: number): void;
    hourChanged(newVal: number): void;
    selectCurrent(): void;
    clear(): void;
    onAmPmChange(newVal: string): void;
    getDayDisabled(date: moment.Moment): boolean;
    inputChanged(val: any): void;
    close(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private onTouchedCallback;
    private onChangeCallback;
}
